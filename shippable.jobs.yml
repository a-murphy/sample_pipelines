jobs:
 # - name: generate-mongo-image-manifest-3
#    type: manifest
 #   steps:
 #     - GET: mongo-image
  #    - GET: myEcsParams

  - name: foo
    type: release
    options:
      action: test
    steps:
      - GET: triggerTwo
      - GET: version-resource-3
     # - GET: myEcsParams
     # - GET: version-resource-5
      - GET: generate-manifest
      - TASK: managed
      
  - name: foo4
    type: release
    options:
      action: minor
    steps:
     # - GET: version-resource-4
      - GET: version-resource-3
      - TASK: managed

  - name: generate-mongo-image-manifest-6
    type: manifest
    steps:
   #   - GET: triggerOne
      - GET: mongo-image
        pull: false
      - GET: myOtherDockerOptions
  #    - GET: generate-manifest
  #    - GET: myEcsParams
  #      applyTo:
  #        - image
      
  #    - GET: myOtherEcsParams
#      - GET: deploy-service
  #    - GET: myOtherDockerOptions
  #      applyTo:
  #        - mongo-image
      - TASK: managed

  - name: generate-manifest
    type: manifest
    steps:
      - GET: triggerOne
      - GET: mongo-image
        pull: false
  #    - GET: myReplicas
#      - GET: deploy-service
  #    - GET: myOtherDockerOptions
      - TASK: managed

 # - name: deploy-service
#    type: ecsDeploy
#    steps:
#      - GET: generate-mongo-image-manifest-3
#      - GET: myEcsCluster

  - name: deploy-service-7
    type: dclDeploy
    steps:
      - GET: generate-manifest
      - GET: myDclCluster
      - GET: myEcsParams
        applyTo:
          - other
      - GET: myOtherEcsParams
      - TASK: managed

  - name: deploy-dcl
    type: dclDeploy
    steps:
      - GET: generate-manifest
      - GET: myDclCluster
      - GET: myEcsParams
      - GET: myOtherEcsParams
 
  - name: ecs-deploy
    type: ecsDeploy
    options:
      deployMethod: upgrade
    steps:
      - GET: triggerTwo
      - GET: generate-mongo-image-manifest-6
      - GET: myEcsCluster
      - GET: myReplicas
#      - GET: deploy-service-7
#      - GET: myEcsParams
      - GET: myOtherDockerOptions
        applyTo:
          - mongo-image
      - TASK: managed
 
  #- name: deploy-service-10
  #  type: ecsDeploy
  #  steps:
  #    - GET: generate-mongo-image-manifest-6
  # #   - GET: myEcsCluster
  #    - GET: myOtherDockerOptions
  # #   - GET: myReplicas
  #    - GET: deploy-service-7
  #    - GET: myEcsParams
  #    - GET: triggerTwo
  # #   - GET: myOtherEcsParams

  - name: CI-project
    type: runCI
    steps:
    #  - GET: triggerOne
      - GET: myEcsParams
      - TASK: managed
      - PUT: mongo-image
      - GET: projectToTrigger
