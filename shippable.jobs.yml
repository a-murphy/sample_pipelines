jobs:

  - name: _Test-123
    type: manifest
    steps:
      - IN: new-mongo-image
      - IN: testDockerOptions
      
  - name: runsh-job2
    type: runSh
    steps:
      - TASK:
        - script: echo test
        - boot:
            imageName: image
            imageTag: tag
            test: test
    
  - name: runcli-job2
    type: runCLI
    steps:
      - TASK:
        - script: echo test
        - boot:
            imageName: image
            imageTag: tag
  #      - boot:
  #          pull: test
  #          options: options

  - name: testRename5_runCI
    type: runCI
    steps:
      - IN: image-resource
        switch: off
  #    - IN: gitlab-repo3
  #    - OUT: sample_pipelines_master
  #      replicate: gitlab-repo3
      - OUT: another-image
        replicate: image-resource
  #    - IN: upgrade-rails-staging
  #    - IN: projectC2
  #    - NOTIFY: notifyMe
  #    - TASK: managed
        
  - name: no-inputs
    type: runSh
    steps:
      - TASK:
        - script: "echo true"

  
  - name: terraformTest
    type: runSh        
    flags:
      - terraform
    steps:
  #    - IN: provisionExternalName
  #    - IN: projectOne
#      - IN: version-resource-1
   #   - IN: myOtherEcsParams
   #   - IN: cliJob2
#      - IN: generate-file-manifest
#        versionNumber: 34
      - IN: busybox-image
        versionName: "latest"
    #    versionNumber: 1
  #    - IN: provisionLoadBalancer
      - IN: projectC2
#      - OUT: image-resource
      - IN: test-state
      - OUT: test-state
        switch: off
#      - IN: file
#        versionNumber: 12
      - TASK:
        - script: echo $PATH
        - script: echo $BUSYBOXIMAGE_STATE
        - script: ls $BUSYBOXIMAGE_STATE
        - script: echo '-------'
        - script: ls $BUSYBOXIMAGE_STATE/../
        - script: cat $BUSYBOXIMAGE_STATE/../version.json
   #     - script: echo "versionName=test4" > /build/state/test-state.env
   #     - script: shipctl put_resource_state test-state versionName test5
   #     - script: echo $SPECIALCHARACTERSBRANCH_HTTPS_URL
   #     - script: echo $SPECIALCHARACTERSBRANCH_SSH_URL
   #     - script: "echo 'SSH: ${SPECIALCHARACTERSBRANCH_SSH_URL} HTTPS: ${SPECIALCHARACTERSBRANCH_HTTPS_URL}' > test.txt"
    #    - script: cat test.txt
    #    - script: "envsubst < test.txt"
    #    - script: cat test.txt
 #       - script: terraform --version
 #       - script: which terraform
 #       - script: which packer
 #       - script: packer version
#        - script: echo "versionName=test11" > /build/state/image-resource.env
  #- OUT: mongo-image
    on_success:
      - script: echo "Success"
 #     - NOTIFY: notifyMe
    on_failure:
      - script: echo "Failure"
  #    - NOTIFY: notifyMe
    always:
      - NOTIFY: notifyMe

  - name: release
    type: release
    flags:
      - notifications
    options:
      action: test
    on_start:
      - NOTIFY: emailMe
      - NOTIFY: notifyMe
    steps:
      - IN: triggerTwo
    #  - IN: sample_pipelines_master_rSync
    #  - IN: time
      - IN: version-resource-1
     # - GET: myEcsParams
     # - GET: version-resource-5
      - IN: generate-manifest
      - OUT: image-resource
      - TASK: managed
    on_success:
   #    - test1
  #     - test2
       - NOTIFY: notifyMe
    on_failure:
  #     - test
    #   - NOTIFY: notifyMe
       - NOTIFY: emailMe

  - name: generate-manifest
    type: manifest
    steps:
      - IN: mongo-image
        switch: off
      - IN: nginx-image
   #   - OUT: triggerOne
      - IN: myDockerOptions
      - TASK: managed

  - name: nginx-manifest
    type: manifest
    steps:
      - IN: nginx-image
        switch: off
    #  - IN: sample_java_mysql_runCI
    #  - IN: gitlabProject
      - TASK: managed      
 
  - name: ECS-deploy
    type: deploy
    method: replace
    stabilityDuration: 30
    steps:
      - IN: nginx-manifest
    #  - IN: nginx-manifest4
      - IN: myEcsCluster
      - IN: zeroReplicas
        versionNumber: 1
      - TASK: managed

  - name: upgrade-ecs-deploy
    type: deploy
    steps:
      - IN: generate-manifest
  #    - IN: foo4
    #  - IN: busybox-manifest2
      - IN: myLoadBalancer
        applyTo:
          - manifest: generate-manifest
            image: mongo-image
            port: 27017
      - IN: myEcsCluster
      - IN: myDockerOptions
      - IN: myOtherDockerOptions
        applyTo:
          - mongo-image
      - TASK: managed
        deployMethod: upgrade

  - name: customImage
    type: runSh
    steps:
      - IN: nginx-image
      - IN: busybox-image
      - IN: version-resource-1
      - IN: myReplicas
#      - IN: myEcsParams
      - IN: myOtherDockerOptions
      - IN: projectOne
      - TASK:
        - script: mkdir testdirectory && cd testdirectory && pwd
        - script: pwd
        - script: "echo '\x1b[34m' $MYECSPARAMS_PARAMS_EIGHT '\x1b[0m'"
        - script: "echo '\x1b[33m' $MYECSPARAMS_VERSION_PARAMS '\x1b[0m'"
        - script: "mkdir -p /build/state/"
        - script: "touch /build/state/mongo-image.env"
        - script: "echo 'versionName=latest' >>  /build/state/mongo-image.env"
        - script: "echo 'anotherProperty=foo' >>  /build/state/mongo-image.env"
        - script: "echo 'anotherProperty2=foo2' >>  /build/state/mongo-image.env"
      - OUT: mongo-image
    on_success:
      - script: echo "Success"
      - NOTIFY: notifyMe
    on_failure:
      - script: echo "Failure"
      - NOTIFY: notifyMe
      
  - name: generate-file-manifest
    type: manifest
    steps:
      - IN: file2
      - IN: test-state
      - OUT: file
    #    replicate: file2
      - IN: new-mongo-image
        switch: off
      - OUT: image-resource
        replicate: new-mongo-image
        
  - name: update-file-runSh
    type: runSh
    steps:
      - TASK:
        - script: echo "versionName=test" > /build/state/file.env
      - OUT: file
