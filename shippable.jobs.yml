jobs:

  - name: _Test-123
    type: manifest
    steps:
      - IN: my-test-params
      - IN: new-mongo-image
      - IN: testDockerOptions

  - name: sample_java_mysql_runCI
    type: runCI
    steps:
      - IN: myEcsParams
      - OUT: mongo-image
      - TASK: managed
    on_start:
      - NOTIFY: emailMe
      - NOTIFY: notifyMe
    on_success:
      - script: echo "Success"
      - NOTIFY: notifyMe
    on_failure:
      - script: echo "Failure"
      - NOTIFY: notifyMe
       
  - name: test-release
    type: release
    options:
      action: test
    steps:
      - IN: version-resource-1
      - IN: generate-manifest
      - IN: nginx-manifest2
        switch: off
      - TASK: managed

  - name: generate-mongo-image-manifest-6
    type: manifest
    steps:
    #  - IN: myOtherDockerOptions
    #  - IN: customImage
    #    switch: off
 #     - IN: triggerOne
      - IN: new-mongo-image
        pull: false
        switch: off
      - IN: generate-manifest
        switch: off
  #    - GET: generate-manifest
  #    - GET: myEcsParams
  #      applyTo:
  #        - image
      
  #    - GET: myOtherEcsParams
#      - GET: deploy-service
  #    - GET: myOtherDockerOptions
  #      applyTo:
  #        - mongo-image
      - TASK: managed

  - name: generate-manifest
    type: manifest
    steps:
      - IN: mongo-image
        switch: off
      - IN: nginx-image
   #   - OUT: triggerOne
      - IN: myDockerOptions
      - TASK: managed

  - name: ecr-manifest
    type: manifest
    steps:
      - IN: ecr-image
        switch: off
      - IN: nginx-manifest3
        switch: off
      - IN: myOtherDockerOptions
        applyTo:
          - ecr-image
      - IN: myEcsParams
        applyTo:
          - ecr-image
      - IN: zeroReplicas
      - IN: myDockerOptions
        applyTo:
          - nginx-image
      - IN: myOtherEcsParams
        applyTo:
          - nginx-image
      - TASK: managed

  - name: nginx-manifest2
    type: manifest
    steps:
      - IN: sample_java_mysql_runCI
      - IN: nginx-image
        switch: off
    #  - IN: sample_java_mysql_runCI
    #  - IN: gitlabProject
      - TASK: managed
      
  - name: nginx-manifest3
    type: manifest
    steps:
      - IN: nginx-image
        switch: off
      - TASK: managed

  - name: nginx-manifest4
    type: manifest
    steps:
      - IN: nginx-image
        switch: off
      - IN: mongo-image
      - TASK: managed

  - name: busybox-manifest2
    type: manifest
    steps:
      - IN: busybox-image
        switch: off
      - TASK: managed
   
  - name: nginx-and-busybox-manifest
    type: manifest
    steps:
      - IN: nginx-manifest3
        switch: off
      - IN: busybox-manifest2
        switch: off
    #  - IN: bitbucketProject2
      - TASK: managed
 
  - name: ECS-deploy
    type: deploy
    method: blueGreen
    stabilityDuration: 30
    steps:
      - IN: nginx-manifest3
    #  - IN: nginx-manifest4
      - IN: myEcsCluster
      - IN: zeroReplicas
        versionNumber: 1
      - TASK: managed
 
  - name: new-ecs-deploy
    type: deploy
    steps:
     # - IN: generate-mongo-image-manifest-6
      - IN: test-release
     # - IN: nginx-and-busybox-manifest
     # - IN: new-manifest
      - IN: myLoadBalancer
        applyTo:
          - manifest: generate-manifest
            image: mongo-image
            port: 27017
   #   - IN: ecs-deploy2
      - IN: myEcsCluster
 #     - IN: myReplicas
#      - GET: deploy-service-7
#      - GET: myEcsParams
      - IN: myOtherDockerOptions
        applyTo:
          - mongo-image
     #     - nginx-image
      - TASK: managed
        deployMethod: upgrade
     
  - name: replace-ecs-deploy2-2
    type: deploy
    steps:
      - IN: generate-manifest
      - IN: nginx-image
      - IN: myEcsCluster
      - TASK: managed
        deployMethod: replace

  - name: replace-ecs-deploy
    type: deploy
    steps:
      - IN: generate-manifest
    #  - IN: busybox-manifest2
      - IN: myLoadBalancer
        applyTo:
          - manifest: generate-manifest
            image: mongo-image
            port: 27017
      - IN: myEcsCluster
      - IN: myDockerOptions
      - IN: myOtherDockerOptions
        applyTo:
          - mongo-image
      - TASK: managed
        deployMethod: replace
        
  - name: upgrade-ecs-deploy
    type: deploy
    steps:
      - IN: generate-manifest
    #  - IN: busybox-manifest2
      - IN: myNewApplicationLoadBalancer
        applyTo:
          - manifest: generate-manifest
            image: mongo-image
            port: 27017
      - IN: awsKeysCluster
      - IN: myDockerOptions
      - IN: testDockerOptions
      - IN: myOtherDockerOptions
        applyTo:
          - mongo-image
      - TASK: managed
        deployMethod: upgrade

  - name: new-ecs-deploy-again
    type: deploy
    steps:
      - IN: new-ecs-deploy
        switch: off
      - IN: myEcsCluster
      - TASK: managed
        deployMethod: upgrade

  - name: ecs-deploy3
    type: deploy
    steps:
      - IN: myEcsCluster
      - IN: generate-manifest
      - IN: nginx-manifest2
        switch: off
      - IN: myReplicas
#      - GET: deploy-service-7
  #    - IN: myEcsParams
      - IN: myDockerOptions
      - IN: myOtherDockerOptions
        applyTo:
          - mongo-image
   #   - IN: myLoadBalancer
   #     applyTo:
   #       - manifest: generate-manifest
   #         image: mongo-image
   #         port: 8000
     #   applyTo:
      #    - mongo-image
      - TASK: managed
        deployMethod: upgrade
        
  - name: ecs-deploy37
    type: deploy
    stabilityDuration: 300
    steps:
      - IN: myEcsCluster
      - IN: nginx-manifest2
      - IN: threeReplicas
      - IN: myDockerOptions
      - IN: myOtherDockerOptions
        applyTo:
          - mongo-image
      - TASK: managed
        deployMethod: blueGreen
        
  - name: ecs-deploy38
    type: deploy
    stabilityDuration: 300
    steps:
      - IN: myEcsCluster
      - IN: nginx-manifest2
      - IN: threeReplicas
      - IN: myDockerOptions
      - IN: myOtherDockerOptions
        applyTo:
          - mongo-image
      - TASK: managed
        deployMethod: blueGreen
        
  - name: ecs-deploy6
    type: deploy
    steps:
      - IN: myEcsCluster
      - IN: generate-manifest
      - IN: nginx-manifest2
      - IN: myReplicas
      - IN: myOtherDockerOptions
      - TASK: managed
        deployMethod: upgrade
