resources:
  - name: provisionLoadBalancer
    type: loadBalancer
  #  integration: GKE
    pointer:
  #    sourceName: "my-load-balancer"
  #    method: NodePort
  #    namespace: my-namespace
  #    clusterName: cluster-1
  #    region: us-central1-c
    version:
      ports:
        - name: my-port
          port: 100 
      #    targetPort: 30100
      #    nodePort: 31000
        - name: my-other-port
          port: 101
          targetPort: 30101
      selector:
        loadBalancer: myLoadBalancer
        otherSelector: value
  #    clusterIP: test.1.2.3
  #    externalIPs:
  #      - test.1.2.3.4
  #    sessionAffinity: "testAffinity"
  #    loadBalancerIP: "loadBalancerIP2"
  #    loadBalancerSourceRanges:
  #      - 127.0.0.1
      externalName: "myName"
      
  - name: provisionExternalName
    type: loadBalancer
    integration: GKE
    pointer:
      sourceName: "my-external-name"
      method: ExternalName
      namespace: my-namespace
      clusterName: cluster-1
      region: us-central1-c
    version:
      ports:
        - port: 102
      selector:
        loadBalancer: myLoadBalancer
        otherSelector: value
      loadBalancerIP: "loadBalancerIP"
      externalName: "my-name"

  - name: mongo-image
    type: image
    pointer:
  #    sourceName: "library/mongo"
  #    isPull: false
    seed:
      versionName: "latest"
      
  - name: new-mongo-image
    type: image
    pointer:
      sourceName: "library/mongo"
      isPull: false
    seed:
      versionName: "latest"
      
  - name: nginx-image
    type: image
    integration: DockerHub
    pointer:
      sourceName: "library/nginx"
      isPull: false
    seed:
      versionName: "latest"
      
  - name: busybox-image
    type: image
    integration: DockerHub
    pointer:
      sourceName: "library/busybox"
      isPull: false
    seed:
      versionName: "latest"
      
  - name: ecr-image
    type: image
    integration: AWS
    pointer:
      sourceName: 544102397216.dkr.ecr.us-west-2.amazonaws.com/test/repository
    seed:
      versionName: "latest"

  - name: notifyMe
    type: notification
    integration: slack
    pointer:
      recipients:
        - "aidans-test-channel"

  - name: emailMe
    type: notification
    integration: email
    pointer:
      recipients:
        - "aidan@shippable.com"

  - name: myLoadBalancer
    type: loadBalancer
    pointer:
      sourceName: LoadBalancer
   #   role: betaNewAWSRole
  
  - name: myNewApplicationLoadBalancer
    type: loadBalancer
    pointer:
      sourceName: "aws:elasticloadbalancing:us-west-2:544102397216:targetgroup/MyApplicationLoadTargetGroup/fc66cb6c0880162e"
      method: application
      

  - name: myEcsParams
    type: params
    integration: AWS
    pointer:
      test: test
    version:
      params:
        foo: bar
        four: 16
        three: 9
        two: 4 
      #  test: "test ' $JOB_TYPE"
        secure: Gk6jWiAktjKz5gIQSXAV9/hDJJj9ZRF4vhMAdmQgVTf7FX9qiLu81aFpflvU//Or5Ydf7D2wjQ5qXSvpRB8WlumJvvOPb4B+hExRNh8oUnyGp6LEAtictPLA20gBSsgU9oQtyoB4haZZd1UzgFa1C3BLMEYBKpKtvFSEVHy/ytb7fy3RMRrJ6XcgZd7OxQ0geRfrjCTVjzU+H7vkBXIUIjmvEipx9D7q/acgYiNdDcarJhh4sbVICNjW8hCpV+rm7cPMbvHKdnRJD+ZVCCpe+/BeTTzQPqz2+4haXYH1An9/FLd3PJq0lYKxOKhxG6Tkqkn6r49MFWScDSUS6S89zQ== 

  - name: myOtherEcsParams
    type: params
    integration: AWS
    pointer:
      test: test
    version:
      params:
        five: 25
    
  - name: myDockerOptions
    type: dockerOptions
    integration: AWS
    version:
      memory: 36
      cpuShares: 5

  - name: myOtherDockerOptions
    type: dockerOptions
    integration: AWS
    version:
      memory: 48
      cpuShares: 10
      portMappings:
        - 27017:27017
        - 8000:8000
        - 80:80
    #  links:
    #    - "one:1"
    #    - "two:2"
     
    #  cmd:
    #    - "pwd"
    #    - "true"
    #  entryPoint:
    #    - "mongod"
    #  privileged: false
    #  user: 0
    #  workingDir: "/home/test"
    #  volumes:
    #    - "/host/path:/container/path:rw"
    #    - "/host/path:/container/path2:rw"
    #    - "/host/path-2:/container/path3:ro"
    #    - "/host/path2:/container/path4:rw"
    #    - "/host/path.2:/container/path5:ro"
    #    - "/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz:/container/path6:ro"
    #  dnsServers:
    #    - "127.0.0.1"
   #     - "8.8.8.8"
    #  dnsSearch:
    #    - "127.0.0.1"
    #    - "8.8.8.8"
    #  logConfig:
    #    type: "json-file"
      #  options:
     #     test: test
    #  ulimits:
    #    - name: cpu
    #      hard: 5
    #      soft: 3
    #    - name: core
    #      hard: 10
    #      soft: 5
      labels:
        labelone: valueOne
        labeltwo: valueTwo
        labelthree: valueThree
        
  - name: myThirdDockerOptions
    type: dockerOptions
    version:
      labels:
        one: One
        labeltwo: Two
        
  - name: myReplicas
    type: replicas
    version:
      count: 2

  - name: myEcsCluster
    type: cluster
    integration: AWS
    pointer:
      sourceName : "test-cluster" #name of the cluster to which we are deploying
      region: "us-west-2"

  - name: myOtherEcsCluster
    type: cluster
    integration: AWS
    pointer:
      sourceName : "Cluster"
      region: "us-west-2"
      test: test

  - name: myGKECluster
    type: cluster
    integration: GKE
    pointer:
      sourceName : "cluster-1"
      region: "us-central1-b"
   #   namespace: myFifthNamespace

  - name: myDclCluster
    type: cluster
    integration: DockerCloud
    pointer:
      sourceName : "DockerCloudCluster"
      
#  - name: projectToTrigger
#    type: gitRepo
#    integration: github
#    pointer:
#      sourceName : "a-murphy/sample_node_postgres"
#      branch: "master"
#    seed:
#      three: 3

#  - name: projectToSync
#    type: syncRepo
#    integration: github
#    pointer:
#      sourceName : "a-murphy/sample_pipelines"
#      branch: "upstream"

  - name: projectOne
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_node_postgres"
      branch: "master"
      branches:
        except:
          - test
          
  - name: projectTwo
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_node_postgres"
      
  
  - name: branchlessProject
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_node_postgres"
      buildOnCommit: false
      buildOnPullRequest: true
      buildOnTagPush: true
      buildOnRelease: false
      branches:
        except:
          - test
          - other
        only:
          - test
          
  - name: branchlessProject2
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_node_postgres"
      buildOnCommit: false
      buildOnPullRequest: true
      buildOnTagPush: true
      buildOnRelease: false
      branches:
        except:
          - test
      
  - name: branchlessProject3
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_node_postgres"
          
  - name: bitbucketProject2
    type: gitRepo
    integration: bitbucket
    pointer:
      sourceName: "a-murphy/sample_ubuntu1204_go"
      buildOnPullRequest: true
      
            
  - name: gitlabProject
    type: gitRepo
    integration: gitlab
    pointer:
      sourceName: "a-murphy/sample_ubuntu1204_go"
      buildOnPullRequest: true
   
 # - name: projectTwo
#    type: gitRepo
#    integration: github
#    pointer:
#      sourceName : "a-murphy/testprivate"
#      branch: "master"

  - name: privateProject3
    type: gitRepo
    integration: bitbucket
    pointer:
      sourceName : "a-murphy/sample_ubuntu1204_go"
      branch: "master"
      
  #- name: projectThree
  #  type: gitRepo
  #  integration: github
  #  pointer:
  #    sourceName: "a-murphy/sample-node-rethinkdb" #"a-murphy-testing/sample_php"
  #    branch: "master"

  - name: version-resource-1
    type: version
    seed:
      versionName: "1.0.5-alpha.beta"
    pointer: 
      base: "1.0.2-alpha.beta"

  - name: tritonCluster
    type: cluster
    integration: Triton
    pointer:
      region: "us-east-1"

#  - name: kickstart
#    type: kickStart
#    version: 
#      count: 1
      
  - name: time
    type: time
    seed:
      interval: "* * * 2 *"

