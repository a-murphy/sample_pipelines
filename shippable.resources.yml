resources:
  - name: sshKey
    type: integration
    integration: sshKey
 
  - name: image-resource
    type: image
    flags:
      - myTestFlag
      - myTestFlag2
    pointer:
      sourceName: amurphy/test
    seed:
      versionName: latest
      
  - name: mongo-image
    type: image
    pointer:
      sourceName: "library/mongo"
#      isPull: false
    seed:
      versionName: "latest"
      
  - name: another-image
    type: image
    pointer:
      sourceName: "library/mongo"
    seed:
      versionName: "latest"
      
  - name: new-mongo-image
    type: image
    pointer:
      sourceName: "library/mongo"
      isPull: false
    seed:
      versionName: "latest"
      
  - name: nginx-image
    type: image
    integration: DockerHub
    pointer:
      sourceName: "library/nginx"
      isPull: false
    seed:
      versionName: "latest"
      
  - name: busybox-image
    type: image
    integration: DockerHub
    pointer:
      sourceName: "library/busybox"
      isPull: false
      test:
        test1: 1!
        test2:
          - 2!
          - 2@
          - 2%
          - 2`
        test3: 3#
    seed:
      versionName: "latest"
      seedtest:
        - 1$
        - "test'2%": 2
          test\2.2&: 2.2
        - 'test"(3)'
  
  - name: notifyMe
    type: notification
    integration: slack
    pointer:
      recipients:
        - "aidans-test-channel"

  - name: emailMe
    type: notification
  #  integration: email
    pointer:
      method: email
      recipients:
        - "aidan@shippable.com"

  - name: myLoadBalancer
    type: loadBalancer
    pointer:
      sourceName: myLoadBalancer
      role: betaNewAWSRole
  
  - name: myNewApplicationLoadBalancer
    type: loadBalancer
    pointer:
      sourceName: "aws:elasticloadbalancing:us-west-2:544102397216:targetgroup/MyApplicationLoadTargetGroup/fc66cb6c0880162e"
      method: application
      

  - name: myEcsParams
    type: params
    integration: AWS
    pointer:
      test: test
    version:
      params:
        foo: bar
        four: 16
        three: 9
        two: 4 
      #  test: "test ' $JOB_TYPE"
        secure: NBmcGS1+JtjsBUB2j4ZcOhNLeMEXK08yp26POvp83OFbg4/Buo/IM8B4gjH1AzlorpxDFLfZUU4IoJcJqPrecUYveJki7A3wff7Yk4qJuDZATcu1flhc/xrVNP2OV0OnfKBd+455ezF3t9u6ul8FPWLN0z9ATwMNlAS9O1ks4JfaO020o0Tacx9XQ+LswjSvCkE+EIbZvmDEEw1FBASAwQYzj97OSWMX2dXTbrNVHEsH40aqnwIpBlYJW0vIeUcEasXzK5DBxKBq8P9zEK1QhDnwHqZihlBkw8w2Dh9b2SqP7hXlqfe+xkcCoEn4qdiHATNfnWK7j5zZaI6dLuA2zQ== 

  - name: myOtherEcsParams
    type: params
    integration: AWS
    pointer:
      test: test
    version:
      params:
        five: 25
    
  - name: testDockerOptions
    type: dockerOptions
    version:
      pod:
        restartPolicy: testRestartPolicy
 
  - name: myDockerOptions
    type: dockerOptions
    integration: AWS
    version:
      memory: 36
      cpuShares: 4

  - name: myOtherDockerOptions
    type: dockerOptions
    integration: AWS
    version:
      service:
        placementStrategy:
          - field: "attribute:ecs.availability-zone"
            type: spread
        deploymentConfiguration: 
          maximumPercent: 150
          minimumHealthyPercent: 75
      memory: 48
    #  cpuShares: 10
      portMappings:
        - 27017:27017
   #     - 27018:27018
        - 8000:8000
    #    - 80:80
    #  links:
    #    - "one:1"
    #    - "two:2"
     
    #  cmd:
    #    - "pwd"
    #    - "true"
    #  entryPoint:
    #    - "mongod"
    #  privileged: false
    #  user: 0
    #  workingDir: "/home/test"
    #  volumes:
    #    - "/host/path:/container/path:rw"
    #    - "/host/path:/container/path2:rw"
    #    - "/host/path-2:/container/path3:ro"
    #    - "/host/path2:/container/path4:rw"
    #    - "/host/path.2:/container/path5:ro"
    #    - "/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz:/container/path6:ro"
    #  dnsServers:
    #    - "127.0.0.1"
   #     - "8.8.8.8"
    #  dnsSearch:
    #    - "127.0.0.1"
    #    - "8.8.8.8"
    #  logConfig:
    #    type: "json-file"
      #  options:
     #     test: test
    #  ulimits:
    #    - name: cpu
    #      hard: 5
    #      soft: 3
    #    - name: core
    #      hard: 10
    #      soft: 5
      labels:
        labelone: valueOne
        labeltwo: valueTwo
        labelthree: valueThree
        
  - name: myThirdDockerOptions
    type: dockerOptions
    version:
      labels:
        one: One
        labeltwo: Two
        
  - name: zeroReplicas
    type: replicas
    version:
      count: 1

  - name: myReplicas
    type: replicas
    version:
      count: 1

  - name: threeReplicas
    type: replicas
    version:
      count: 3

  - name: myEcsCluster
    type: cluster
    integration: AWS
    pointer:
      sourceName : "test-cluster" #name of the cluster to which we are deploying
      region: "us-west-2"
      
  - name: version-resource-1
    type: version
    seed:
      versionName: "1.0.5-alpha.beta"
    pointer: 
      base: "1.0.2-alpha.beta"

  - name: time
    type: time
    seed:
      interval: "/2 * * * *"


  - name: file
    type: file
    pointer:
      sourceName: https://raw.githubusercontent.com/a-murphy/sample_pipelines/test/README.md
    seed:
      versionName: test
      
  - name: file2
    type: file
    pointer:
      sourceName: https://raw.githubusercontent.com/a-murphy/sample_pipelines/testfailure/README.md
    seed:
      versionName: test4
      
