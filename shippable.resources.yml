resources:
  - name: sshKey
    type: integration
    integration: sshKey
 
  - name: gitlab-repo2
    type: gitRepo
    integration: gitlab
    pointer:
      sourceName: a-murphy/sample_ubuntu1204_go
      branch: master
   #   buildOnPullRequest: true
      buildOnPullRequestClose: true

  - name: image-resource
    type: image
    flags:
      - myTestFlag
      - myTestFlag2
    pointer:
      sourceName: amurphy/test
    seed:
      versionName: latest

  - name: develop-git-repo-resource-with-script
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_java_mongo"
      branch: "test1"
    flags:
      - myTestFlag
      
  - name: master-git-repo-resource-with-script
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_java_mongo"
      branch: "test2"
    flags:
      - myTestFlag

  - name: gkeConfigResource
    type: cliConfig
    integration: gcloud
    pointer:
      clusterName: cluster-1
      namespace: testnamespace
      region: us-central1-a
 
 # - name: jFrogResource
 #   type: cliConfig
 #   integration: JFrog
 
  
  - name: artifactoryConfig
    type: cliConfig
    integration: Artifactory
    
  - name: awsConfigResource
    type: cliConfig
    integration: AWS
    pointer:
 #     clusterName: cluster-1
      region: us-east-1
 
  - name: ecrConfigResource
    type: cliConfig
    integration: ECR
    pointer:
 #     clusterName: cluster-1
      region: us-west-2
 
  - name: gcrConfigResource
    type: cliConfig
    integration: GCR
 ##   pointer:
 #     clusterName: cluster-1

 #     region: us-west-2
 
  - name: dockerHubConfigResource
    type: cliConfig
    integration: DockerHub
 ##   pointer:
 #     clusterName: cluster-1
 #     region: us-west-2
 
  - name: provisionLoadBalancer
    type: loadBalancer
    integration: gcloud
    pointer:
      sourceName: "my-load-balancer"
      method: LoadBalancer
  #    namespace: my-namespaceus-central1-c
      clusterName: cluster-1
  #    region: us-central1-a
    version:
      ports:
        - name: my-port
          port: 100 
      #    targetPort: 30100
      #    nodePort: 31000
   #     - name: my-other-port
   #       port: 101
   #       targetPort: 30101
      selector:
        shippable.manifestName: vmk-app-def
        loadBalancer: myLoadBalancer
        otherSelector: value
  #    clusterIP: test.1.2.3
    #  externalIPs:
    #    - test.1.2.3.4
  #    sessionAffinity: "testAffinity"
  #    loadBalancerIP: "loadBalancerIP2"
  #    loadBalancerSourceRanges:
  #      - 127.0.0.1
  #    externalName: "myName"
      
      
  - name: kubernetesLoadBalancer
    type: loadBalancer
    integration: Kubernetes
    pointer:
      sourceName: "my-load-balancer"
      method: LoadBalancer
      clusterName: cluster-1
    version:
      ports:
        - name: my-port
          port: 100
          protocol: TCP
      selector:
        shippable.manifestName: vmk-app-def
        loadBalancer: myLoadBalancer
        otherSelector: value
      
  - name: provisionExternalName
    type: loadBalancer
    integration: gcloud
    pointer:
      sourceName: "my-external-name"
      method: ExternalName
      namespace: my-namespace
      clusterName: cluster-1
      region: us-central1-a
      bastionHost:
        address: "138.197.25.111"
        user: shippable
        keyIntegration: sshKey
    version:
      ports:
        - port: 102
      selector:
        loadBalancer: myLoadBalancer
        otherSelector: value
      loadBalancerIP: "loadBalancerIP"
      externalName: "my-name"

  - name: test-state
    type: state
    pointer:
      sourceName: sourceName
    seed:
      versionName: "latest"

  - name: mongo-image
    type: image
    pointer:
      sourceName: "library/mongo"
#      isPull: false
    seed:
      versionName: "latest"
      
  - name: new-mongo-image
    type: image
    pointer:
      sourceName: "library/mongo"
      isPull: false
    seed:
      versionName: "latest"
      
  - name: nginx-image
    type: image
    integration: DockerHub
    pointer:
      sourceName: "library/nginx"
      isPull: false
    seed:
      versionName: "latest"
      
  - name: busybox-image
    type: image
    integration: DockerHub
    pointer:
      sourceName: "library/busybox"
      isPull: false
      test:
        test1: 1!
        test2:
          - 2!
          - 2@
          - 2%
          - 2`
        test3: 3#
    seed:
      versionName: "latest"
      seedtest:
        - 1$
        - "test'2%": 2
          test\2.2&: 2.2
        - 'test"(3)'
      
  - name: ecr-image
    type: image
    integration: AWS
    pointer:
      sourceName: 544102397216.dkr.ecr.us-west-2.amazonaws.com/test/repository
    seed:
      versionName: "latest"

  - name: notifyMe
    type: notification
    integration: slack
    pointer:
      recipients:
        - "aidans-test-channel"

  - name: emailMe
    type: notification
  #  integration: email
    pointer:
      method: email
      recipients:
        - "aidan@shippable.com"

  - name: myLoadBalancer
    type: loadBalancer
    pointer:
      sourceName: myLoadBalancer
   #   role: betaNewAWSRole
  
  - name: myNewApplicationLoadBalancer
    type: loadBalancer
    pointer:
      sourceName: "aws:elasticloadbalancing:us-west-2:544102397216:targetgroup/MyApplicationLoadTargetGroup/fc66cb6c0880162e"
      method: application
      

  - name: myEcsParams
    type: params
    integration: AWS
    pointer:
      test: test
    version:
      params:
        foo: bar
        four: 16
        three: 9
        two: 4 
      #  test: "test ' $JOB_TYPE"
        secure: NBmcGS1+JtjsBUB2j4ZcOhNLeMEXK08yp26POvp83OFbg4/Buo/IM8B4gjH1AzlorpxDFLfZUU4IoJcJqPrecUYveJki7A3wff7Yk4qJuDZATcu1flhc/xrVNP2OV0OnfKBd+455ezF3t9u6ul8FPWLN0z9ATwMNlAS9O1ks4JfaO020o0Tacx9XQ+LswjSvCkE+EIbZvmDEEw1FBASAwQYzj97OSWMX2dXTbrNVHEsH40aqnwIpBlYJW0vIeUcEasXzK5DBxKBq8P9zEK1QhDnwHqZihlBkw8w2Dh9b2SqP7hXlqfe+xkcCoEn4qdiHATNfnWK7j5zZaI6dLuA2zQ== 

  - name: myOtherEcsParams
    type: params
    integration: AWS
    pointer:
      test: test
    version:
      params:
        five: 25
    
  - name: myDockerOptions
    type: dockerOptions
    integration: AWS
    version:
      memory: 36
      cpuShares: 4

  - name: myOtherDockerOptions
    type: dockerOptions
    integration: AWS
    version:
      service:
        placementStrategy:
          - field: "attribute:ecs.availability-zone"
            type: spread
        deploymentConfiguration: 
          maximumPercent: 150
          minimumHealthyPercent: 75
      memory: 48
    #  cpuShares: 10
      portMappings:
        - 27017:27017
   #     - 27018:27018
        - 8000:8000
    #    - 80:80
    #  links:
    #    - "one:1"
    #    - "two:2"
     
    #  cmd:
    #    - "pwd"
    #    - "true"
    #  entryPoint:
    #    - "mongod"
    #  privileged: false
    #  user: 0
    #  workingDir: "/home/test"
    #  volumes:
    #    - "/host/path:/container/path:rw"
    #    - "/host/path:/container/path2:rw"
    #    - "/host/path-2:/container/path3:ro"
    #    - "/host/path2:/container/path4:rw"
    #    - "/host/path.2:/container/path5:ro"
    #    - "/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz/abcdefghijklmnopqrstuvwxyz:/container/path6:ro"
    #  dnsServers:
    #    - "127.0.0.1"
   #     - "8.8.8.8"
    #  dnsSearch:
    #    - "127.0.0.1"
    #    - "8.8.8.8"
    #  logConfig:
    #    type: "json-file"
      #  options:
     #     test: test
    #  ulimits:
    #    - name: cpu
    #      hard: 5
    #      soft: 3
    #    - name: core
    #      hard: 10
    #      soft: 5
      labels:
        labelone: valueOne
        labeltwo: valueTwo
        labelthree: valueThree
        
  - name: myThirdDockerOptions
    type: dockerOptions
    version:
      labels:
        one: One
        labeltwo: Two
        
  - name: zeroReplicas
    type: replicas
    version:
      count: 1

  - name: myReplicas
    type: replicas
    version:
      count: 1

  - name: threeReplicas
    type: replicas
    version:
      count: 3

  - name: myEcsCluster
    type: cluster
    integration: AWS
    pointer:
      sourceName : "test-cluster" #name of the cluster to which we are deploying
      region: "us-west-2"
      
  - name: awsKeysCluster
    type: cluster
    integration: awsKeys
    pointer:
      sourceName : "test-cluster"
      region: "us-west-2"

  - name: myOtherEcsCluster
    type: cluster
    integration: AWS
    pointer:
      sourceName : "Cluster"
      region: "us-west-2"
      test: test

  - name: myGKECluster
    type: cluster
    integration: gcloud
    pointer:
      bastionHost:
        address: "138.197.25.111"
        user: shippable
        keyIntegration: sshKey
      sourceName : "cluster-1"
      region: "us-central1-a"
      namespace: myNamespace

  - name: myDclCluster
    type: cluster
    integration: DockerCloud
    pointer:
      sourceName : "DockerCloudCluster"
      
  - name: myDDCCluster
    type: cluster
    integration: DDC
    
  - name: kubernetesCluster
    type: cluster
    integration: Kubernetes
    pointer:
      namespace: my-namespace
      
 
  - name: azureCluster
    type: cluster
    integration: DC/OS
      
#  - name: projectToTrigger
#    type: gitRepo
#    integration: github
#    pointer:
#      sourceName : "a-murphy/sample_node_postgres"
#      branch: "master"
#    seed:
#      three: 3

#  - name: projectToSync
#    type: syncRepo
#    integration: github
#    pointer:
#      sourceName : "a-murphy/sample_pipelines"
#      branch: "upstream"

  - name: projectOne
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_node_postgres"
      branch: "master"
      branches:
        except:
          - test
          
  - name: projectTwo
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_node_postgres"
  
  - name: branchlessProject
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_node_postgres"
      buildOnCommit: false
      buildOnPullRequest: true
      buildOnTagPush: true
      buildOnRelease: false
      branches:
        except:
          - test
          - other
        only:
          - test
          
  - name: projectC
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_c"
      
  - name: projectC2
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_c"
      
  - name: projectC-master
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_c"
      branch: master

  - name: branchlessProject2
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_node_postgres"
      buildOnCommit: false
      buildOnPullRequest: true
      buildOnTagPush: true
      buildOnRelease: true
      branches:
        except:
          - test
          
  - name: specialCharactersBranch
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_pipelines"
      branch: "test$special`characters"
      
  - name: branchlessProject3
    type: gitRepo
    integration: github
    pointer:
      sourceName: "a-murphy/sample_node_postgres"
          
  - name: bitbucketProject2
    type: gitRepo
    integration: bitbucket
    pointer:
      sourceName: "a-murphy/sample_ubuntu1204_go"
      buildOnPullRequest: true
                  
 # - name: gitlabProject
 #   type: gitRepo
 #   integration: gitlab
 #   pointer:
 #     sourceName: "a-murphy/sample_ubuntu1204_go"
 #     buildOnPullRequest: true
   
 # - name: projectTwo
#    type: gitRepo
#    integration: github
#    pointer:
#      sourceName : "a-murphy/testprivate"
#      branch: "master"

  - name: privateProject3
    type: gitRepo
    integration: bitbucket
    pointer:
      sourceName : "a-murphy/sample_ubuntu1204_go"
      branch: "master"
      
  #- name: projectThree
  #  type: gitRepo
  #  integration: github
  #  pointer:
  #    sourceName: "a-murphy/sample-node-rethinkdb" #"a-murphy-testing/sample_php"
  #    branch: "master"

  - name: version-resource-1
    type: version
    seed:
      versionName: "1.0.5-alpha.beta"
    pointer: 
      base: "1.0.2-alpha.beta"

  - name: tritonCluster
    type: cluster
 #   integration: Triton
    pointer:
      region: "us-east-1"

#  - name: kickstart
#    type: kickStart
#    version: 
#      count: 1
      
  - name: time
    type: time
    seed:
      interval: "/2 * * * *"


  - name: file
    type: file
    pointer:
      sourceName: https://raw.githubusercontent.com/a-murphy/sample_pipelines/test/README.md
    seed:
      versionName: test
      
  - name: file2
    type: file
    pointer:
      sourceName: https://raw.githubusercontent.com/a-murphy/sample_pipelines/test/README.md
    seed:
      versionName: test4
      
  - name: nodeCluster
    type: cluster
    integration: Node
      
